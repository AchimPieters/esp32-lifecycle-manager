// Auto-generated from index.html with custom script

const char *html_settings_header =
"\n"
"<!DOCTYPE html>\n"
"<html lang=\"en\">\n"
"<head>\n"
"  <meta charset=\"UTF-8\" />\n"
"  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\n"
"  <meta name=\"apple-mobile-web-app-capable\" content=\"yes\">\n"
"  <meta name=\"mobile-web-app-capable\" content=\"yes\">\n"
"  <title>WiFi Configuration</title>\n"
"  <style>\n"
"    html,\n"
"    body {\n"
"      margin: 0;\n"
"      padding: 0;\n"
"      font-size: 16px;\n"
"      font-family: \"SF Pro Text\", \"SF Pro Icons\", \"Helvetica Neue\", \"Helvetica\", \"Arial\", sans-serif;\n"
"      background-color: #f5f5f7;\n"
"      color: #1d1d1f;\n"
"    }\n"
"    h1 {\n"
"      font-size: 1.8rem;\n"
"      font-weight: 600;\n"
"      text-align: center;\n"
"      margin-bottom: 2rem;\n"
"    }\n"
"    .container {\n"
"      max-width: 480px;\n"
"      margin: 4rem auto;\n"
"      padding: 2rem;\n"
"      background: #ffffff;\n"
"      border-radius: 20px;\n"
"      box-shadow: 0 12px 24px rgba(0, 0, 0, 0.05);\n"
"    }\n"
"    label {\n"
"      display: block;\n"
"      margin-bottom: 0.5rem;\n"
"      font-weight: 500;\n"
"    }\n"
"    input[type=text],\n"
"    input[type=password] {\n"
"      width: 100%;\n"
"      font-size: 1rem;\n"
"      padding: 0.75rem;\n"
"      margin-bottom: 1.5rem;\n"
"      box-sizing: border-box;\n"
"      border: 1px solid #d2d2d7;\n"
"      border-radius: 12px;\n"
"      background-color: #f9f9f9;\n"
"      transition: border 0.3s ease;\n"
"    }\n"
"    input[type=text]:focus,\n"
"    input[type=password]:focus {\n"
"      outline: none;\n"
"      border-color: #007aff;\n"
"      background-color: #fff;\n"
"    }\n"
"    input[type=submit] {\n"
"      width: 100%;\n"
"      font-size: 1rem;\n"
"      padding: 0.85rem;\n"
"      border: none;\n"
"      border-radius: 12px;\n"
"      font-weight: 600;\n"
"      transition: background-color 0.3s ease;\n"
"      cursor: pointer;\n"
"    }\n"
"    input[type=submit]#refresh {\n"
"      background-color: #0071e3;\n"
"      color: white;\n"
"      margin-bottom: 1rem;\n"
"    }\n"
"    input[type=submit]#join {\n"
"      background-color: #34c759;\n"
"      color: white;\n"
"    }\n"
"\n"
"    input[type=submit]:hover:not([disabled]) {\n"
"      opacity: 0.9;\n"
"    }\n"
"    input[type=submit][disabled] {\n"
"      background-color: #e5e5ea !important;\n"
"      color: #b1b1b1;\n"
"      cursor: not-allowed;\n"
"    }\n"
"    .networks {\n"
"      list-style: none;\n"
"      padding: 0;\n"
"      margin: 1rem 0 2rem 0;\n"
"    }\n"
"    .networks li {\n"
"      display: block;\n"
"      padding: 0.75rem 1rem 0.75rem 2.5rem;\n"
"      margin-bottom: 0.5rem;\n"
"      background: #f2f2f7;\n"
"      border-radius: 12px;\n"
"      position: relative;\n"
"      font-size: 1rem;\n"
"      cursor: pointer;\n"
"      transition: background 0.2s ease;\n"
"    }\n"
"    .networks li:hover {\n"
"      background-color: #e0e0e5;\n"
"    }\n"
"    .networks li.secure {\n"
"      position: relative;\n"
"    }\n"
"    .networks li.secure::after {\n"
"      content: \"\";\n"
"      position: absolute;\n"
"      right: 1rem;\n"
"      top: 50%;\n"
"      transform: translateY(-50%);\n"
"      width: 0.7rem;\n"
"      height: 1rem;\n"
"      background-image: url(\"data:image/svg+xml;utf8,%3Csvg%20xmlns%3D%22http%3A//www.w3.org/2000/svg%22%20width%3D%2216.66mm%22%20height%3D%2223.95mm%22%20viewBox%3D%220%200%2047.23%2067.89%22%3E%3Cpath%20d%3D%22M7.79%2C67.89c-2.54%2C0-4.47-.69-5.8-2.08C0.66%2C64.43%2C0%2C62.38%2C0%2C59.66V35.82c0-2.72%2C0.66-4.77%2C1.99-6.14%2C1.33-1.37%2C3.26-2.06%2C5.8-2.06h31.66c2.54%2C0%2C4.47%2C0.69%2C5.8%2C2.06%2C1.33%2C1.37%2C1.99%2C3.42%2C1.99%2C6.14v23.84c0%2C2.72-.66%2C4.78-1.99%2C6.16-1.33%2C1.38-3.26%2C2.08-5.8%2C2.08H7.79ZM6.06%2C30.28V19.35c0-4.34%2C0.84-7.94%2C2.51-10.8%2C1.67-2.86%2C3.85-5%2C6.52-6.42%2C2.68-1.42%2C5.51-2.13%2C8.51-2.13%2C3.02%2C0%2C5.87%2C0.71%2C8.55%2C2.13%2C2.68%2C1.42%2C4.85%2C3.56%2C6.52%2C6.42%2C1.67%2C2.86%2C2.51%2C6.46%2C2.51%2C10.8v10.93h-5.47V18.58c0-2.91-.56-5.35-1.68-7.34-1.12-1.98-2.6-3.48-4.43-4.5-1.83-1.01-3.84-1.52-6-1.52-2.15%2C0-4.13%2C0.51-5.97%2C1.52-1.83%2C1.02-3.3%2C2.51-4.41%2C4.5-1.11%2C1.98-1.66%2C4.43-1.66%2C7.34v11.7h-5.5Z%22%20fill%3D%22%23939598%22/%3E%3C/svg%3E\");\n"
"      background-repeat: no-repeat;\n"
"      background-size: contain;\n"
"    }\n"
"    .networks li {\n"
"      position: relative;\n"
"      padding-left: 2.5rem;\n"
"      /* ruimte voor icoon */\n"
"    }\n"
"    .networks li:not(.other)::before {\n"
"      content: \"\";\n"
"      position: absolute;\n"
"      left: 1rem;\n"
"      top: 50%;\n"
"      transform: translateY(-50%);\n"
"      width: 1rem;\n"
"      height: 1rem;\n"
"      background-image: url(\"data:image/svg+xml;utf8,%3Csvg%20xmlns%3D%22http%3A//www.w3.org/2000/svg%22%20width%3D%2224.9mm%22%20height%3D%2224.9mm%22%20viewBox%3D%220%200%2070.59%2070.59%22%3E%3Cpath%20d%3D%22M35.29%2C70.59c-4.87%2C0-9.44-.92-13.7-2.75-4.27-1.83-8.02-4.37-11.25-7.61-3.23-3.24-5.76-6.99-7.6-11.25s-2.75-8.82-2.75-13.69.92-9.44%2C2.75-13.7%2C4.37-8.02%2C7.6-11.25c3.23-3.23%2C6.98-5.76%2C11.25-7.6%2C4.27-1.83%2C8.83-2.75%2C13.7-2.75s9.43%2C0.92%2C13.7%2C2.75c4.27%2C1.83%2C8.02%2C4.37%2C11.25%2C7.6%2C3.23%2C3.23%2C5.76%2C6.98%2C7.6%2C11.25s2.75%2C8.83%2C2.75%2C13.7-.92%2C9.43-2.75%2C13.69-4.37%2C8%2C-7.6%2C11.25c-3.23%2C3.24-6.98%2C5.78-11.25%2C7.61-4.27%2C1.83-8.83%2C2.75-13.7%2C2.75ZM15.54%2C32.98c.21.28.49.42.85.42.36%2C0%2C.67-.15.95-.45%2C2.33-2.49%2C5.03-4.39%2C8.1-5.69%2C3.07-1.3%2C6.37-1.96%2C9.9-1.96%2C3.53%2C0%2C6.83%2C0.65%2C9.91%2C1.96%2C3.08%2C1.3%2C5.78%2C3.21%2C8.11%2C5.73.58.58%2C1.16.57%2C1.76-.03l2.66-2.7c.48-.51.52-1.03.1-1.56-1.61-1.98-3.62-3.72-6.02-5.21-2.4-1.49-5.02-2.64-7.87-3.46-2.85-.82-5.74-1.23-8.67-1.23s-5.82.41-8.67%2C1.23c-2.85.82-5.47%2C1.97-7.87%2C3.46-2.4%2C1.49-4.41%2C3.23-6.02%2C5.21-.44.53-.4%2C1.05.1%2C1.56l2.66%2C2.73ZM23.67%2C41.14c.65.62%2C1.27.6%2C1.87-.07%2C1.2-1.34%2C2.68-2.4%2C4.43-3.2%2C1.75-.8%2C3.54-1.18%2C5.36-1.16%2C1.8-.02%2C3.59.36%2C5.36%2C1.16%2C1.78.8%2C3.28%2C1.87%2C4.5%2C3.24.28.3.58.45.9.45.32%2C0%2C.62-.14.9-.42l3.01-3.04c.23-.21.35-.46.36-.74.01-.29-.09-.54-.29-.74-1.61-1.96-3.75-3.53-6.4-4.71-2.65-1.18-5.43-1.77-8.34-1.77s-5.69.59-8.34%2C1.77c-2.65%2C1.18-4.8%2C2.75-6.44%2C4.71-.39.48-.35.98.14%2C1.49l2.98%2C3.04ZM35.33%2C51.9c.28%2C0%2C.54-.07.8-.21.25-.14.59-.42%2C1-.83l4.74-4.6c.48-.48.53-.98.14-1.49-.71-.95-1.68-1.72-2.91-2.32-1.22-.6-2.48-.9-3.77-.9-1.31%2C0-2.58.31-3.81.93-1.22.62-2.2%2C1.44-2.94%2C2.46-.3.44-.23.88.21%2C1.31l4.77%2C4.6c.39.42.71.69.97.83.25.14.52.21.8.21Z%22%20fill%3D%22%23939598%22/%3E%3C/svg%3E\");\n"
"      background-size: contain;\n"
"      background-repeat: no-repeat;\n"
"    }\n"
"    .networks li.selected {\n"
"      background-color: #d6eaff;\n"
"      font-weight: 600;\n"
"    }\n"
"    .networks li.other {\n"
"      text-align: center;\n"
"      margin-top: 2rem;\n"
"    }\n"
"    .nonetworks {\n"
"      text-align: center;\n"
"      margin: 2rem 0;\n"
"      color: #999;\n"
"      font-size: 0.95rem;\n"
"    }\n"
"    .field {\n"
"      margin-bottom: 1.5rem;\n"
"    }\n"
"    .field.required label::before {\n"
"      content: \"* \";\n"
"      color: red;\n"
"    }\n"
"    .card {\n"
"      margin-bottom: 1.5rem;\n"
"      padding: 1rem;\n"
"      background: #f2f2f7;\n"
"      border-radius: 12px;\n"
"    }\n"
"    .checkbox {\n"
"      display: flex;\n"
"      align-items: center;\n"
"      gap: 0.5rem;\n"
"      margin-bottom: 1rem;\n"
"    }\n"
"    .muted {\n"
"      color: #999;\n"
"      font-size: 0.9rem;\n"
"      margin-bottom: 1rem;\n"
"    }\n"
"  </style>\n"
"</head>\n"
"<body>\n"
"  <div class=\"container\">\n";

const char *html_settings_custom_html =
"    %s\n";

const char *html_settings_body =
"\n"
"    <h1>Choose a Wi-Fi Network</h1>\n"
"    <form action=\"/settings\" method=\"get\">\n"
"      <input type=\"submit\" id=\"refresh\" value=\"âŸ² Refresh\" />\n"
"    </form>\n"
"    <form action=\"/settings\" method=\"post\">\n"
"      <div class=\"nonetworks\" style=\"display: none;\">No networks found</div>\n"
"      <ul id=\"networks\" class=\"networks\">\n";

const char *html_network_item =
"        <li class=\"%s\">%s</li>\n";

const char *html_settings_footer =
"\n"
"        <li class=\"other\">Choose Another Network</li>\n"
"      </ul>\n"
"      <div class=\"field required ssid\" style=\"display: none;\">\n"
"        <label for=\"ssid\">SSID:</label>\n"
"        <input type=\"text\" id=\"ssid\" name=\"ssid\" />\n"
"      </div>\n"
"      <div class=\"field required password\" style=\"display: none;\">\n"
"        <label for=\"password\">Password:</label>\n"
"        <input type=\"password\" id=\"password\" name=\"password\" />\n"
"      </div>\n"
"      <section class=\"card\">\n"
"        <h3>Firmware bron (GitHub)</h3>\n"
"\n"
"        <label for=\"repo\">Repo (owner/repo)</label>\n"
"        <input id=\"repo\" name=\"repo\" type=\"text\" placeholder=\"bv. AchimPieters/esp32-test\" required />\n"
"\n"
"        <label class=\"checkbox\">\n"
"          <input id=\"use_prerelease\" name=\"use_prerelease\" type=\"checkbox\" />\n"
"          Gebruik pre-release\n"
"        </label>\n"
"\n"
"      </section>\n"
"      <section class=\"card\">\n"
"        <h3>LED identificatie</h3>\n"
"\n"
"        <label class=\"checkbox\">\n"
"          <input id=\"led_indicator\" name=\"led_indicator\" type=\"checkbox\" checked />\n"
"          Gebruik LED tijdens update\n"
"        </label>\n"
"\n"
"        <label for=\"led_gpio\">GPIO</label>\n"
"        <select id=\"led_gpio\" name=\"led_gpio\">\n"
"          <option value=\"n\">no pin</option>\n"
"          <option value=\"2\">gpio-2</option><option value=\"4\">gpio-4</option><option value=\"5\">gpio-5</option>\n"
"          <option value=\"12\">gpio-12</option><option value=\"13\">gpio-13</option><option value=\"14\">gpio-14</option>\n"
"          <option value=\"15\">gpio-15</option><option value=\"16\">gpio-16</option><option value=\"17\">gpio-17</option>\n"
"          <option value=\"18\">gpio-18</option><option value=\"19\">gpio-19</option><option value=\"20\">gpio-20</option>\n"
"          <option value=\"21\">gpio-21</option><option value=\"22\">gpio-22</option><option value=\"23\">gpio-23</option>\n"
"          <option value=\"24\">gpio-24</option><option value=\"25\">gpio-25</option><option value=\"26\">gpio-26</option>\n"
"          <option value=\"27\">gpio-27</option><option value=\"28\">gpio-28</option><option value=\"29\">gpio-29</option>\n"
"          <option value=\"30\">gpio-30</option><option value=\"31\">gpio-31</option><option value=\"32\">gpio-32</option>\n"
"        </select>\n"
"      </section>\n"
"      <input type=\"submit\" id=\"join\" value=\"Join\" disabled />\n"
"    </form>\n"
"    <p style=\"text-align:center\"><sub><sup>Copyright Â© 2025 | StudioPietersÂ® | All rights reserved.</sub></sup></p>\n"
"  </div>\n"
"  <script>\n"
"    const networks_block = document.getElementById('networks');\n"
"    const ssid_block = document.querySelector('.field.ssid');\n"
"    const ssid_field = document.getElementById('ssid');\n"
"    const password_block = document.querySelector('.field.password');\n"
"    const password_field = document.getElementById('password');\n"
"    const join_button = document.getElementById('join');\n"
"    const led_checkbox = document.getElementById('led_indicator');\n"
"    const led_select = document.getElementById('led_gpio');\n"
"\n"
"    function updateLedControls() {\n"
"      if (led_select) {\n"
"        led_select.disabled = !led_checkbox.checked;\n"
"      }\n"
"    }\n"
"\n"
"    if (led_checkbox) {\n"
"      led_checkbox.addEventListener('change', updateLedControls);\n"
"    }\n"
"    updateLedControls();\n"
"\n"
"    window.applyLedPreferences = (enabled, gpioValue) => {\n"
"      if (!led_checkbox || !led_select) {\n"
"        return;\n"
"      }\n"
"      led_checkbox.checked = !!enabled;\n"
"      const normalizedValue = gpioValue === undefined || gpioValue === null ? '' : String(gpioValue);\n"
"      const optionValues = Array.from(led_select.options).map(opt => opt.value);\n"
"      led_select.value = optionValues.includes(normalizedValue) ? normalizedValue : 'n';\n"
"      updateLedControls();\n"
"    };\n"
"    function enable(el) {\n"
"      el.disabled = false;\n"
"    }\n"
"    function disable(el) {\n"
"      el.disabled = true;\n"
"    }\n"
"    function show(el) {\n"
"      el.style.display = 'block';\n"
"    }\n"
"    function hide(el) {\n"
"      el.style.display = 'none';\n"
"    }\n"
"    function selectNetwork(el) {\n"
"      document.querySelectorAll('ul.networks li').forEach(n => n.classList.remove('selected'));\n"
"      el.classList.add('selected');\n"
"    }\n"
"    document.querySelectorAll('ul.networks li.unsecure').forEach(li => {\n"
"      li.onclick = () => {\n"
"        selectNetwork(li);\n"
"        ssid_field.value = li.innerText;\n"
"        hide(ssid_block);\n"
"        hide(password_block);\n"
"        disable(password_field);\n"
"        password_field.value = '';\n"
"        enable(join_button);\n"
"      };\n"
"    });\n"
"    document.querySelectorAll('ul.networks li.secure').forEach(li => {\n"
"      li.onclick = () => {\n"
"        selectNetwork(li);\n"
"        ssid_field.value = li.innerText;\n"
"        hide(ssid_block);\n"
"        enable(password_field);\n"
"        show(password_block);\n"
"        disable(join_button);\n"
"        password_block.classList.add('required');\n"
"      };\n"
"    });\n"
"    document.querySelectorAll('ul.networks li.other').forEach(li => {\n"
"      li.onclick = () => {\n"
"        if (li.classList.contains('selected')) return;\n"
"        selectNetwork(li);\n"
"        ssid_field.value = '';\n"
"        show(ssid_block);\n"
"        show(password_block);\n"
"        enable(ssid_field);\n"
"        enable(password_field);\n"
"        disable(join_button);\n"
"        password_block.classList.remove('required');\n"
"      };\n"
"    });\n"
"    if (document.querySelectorAll('ul.networks li').length === 1) {\n"
"      show(document.querySelector('.nonetworks'));\n"
"      hide(networks_block);\n"
"      show(ssid_block);\n"
"      show(password_block);\n"
"      password_block.classList.remove('required');\n"
"    }\n"
"    [ssid_field, password_field].forEach(input => {\n"
"      input.oninput = () => {\n"
"        const ssidRequired = ssid_block.classList.contains('required');\n"
"        const passwordRequired = password_block.classList.contains('required');\n"
"        const enableBtn = (!ssidRequired || ssid_field.value !== '') &&\n"
"          (!passwordRequired || password_field.value !== '');\n"
"        enableBtn ? enable(join_button) : disable(join_button);\n"
"      };\n"
"    });\n"
"  </script>\n"
"  \n"
"</body>\n"
"</html>\n";
